from qiskit import QuantumCircuit, QuantumRegister
import numpy as np

def aqft20():
    qc = QuantumCircuit()

    q = QuantumRegister(20, 'q')

    qc.add_register(q)

    qc.h(q[19])
    qc.cp(np.pi / 2, q[19], q[18])
    qc.h(q[18])
    qc.cp(np.pi / 4, q[19], q[17])
    qc.cp(np.pi / 2, q[18], q[17])
    qc.h(q[17])
    qc.cp(np.pi / 8, q[19], q[16])
    qc.cp(np.pi / 4, q[18], q[16])
    qc.cp(np.pi / 2, q[17], q[16])
    qc.h(q[16])
    qc.cp(np.pi / 16, q[19], q[15])
    qc.cp(np.pi / 8, q[18], q[15])
    qc.cp(np.pi / 4, q[17], q[15])
    qc.cp(np.pi / 2, q[16], q[15])
    qc.h(q[15])
    qc.cp(np.pi / 32, q[19], q[14])
    qc.cp(np.pi / 16, q[18], q[14])
    qc.cp(np.pi / 8, q[17], q[14])
    qc.cp(np.pi / 4, q[16], q[14])
    qc.cp(np.pi / 2, q[15], q[14])
    qc.h(q[14])
    qc.cp(np.pi / 32, q[18], q[13])
    qc.cp(np.pi / 16, q[17], q[13])
    qc.cp(np.pi / 8, q[16], q[13])
    qc.cp(np.pi / 4, q[15], q[13])
    qc.cp(np.pi / 2, q[14], q[13])
    qc.h(q[13])
    qc.cp(np.pi / 32, q[17], q[12])
    qc.cp(np.pi / 16, q[16], q[12])
    qc.cp(np.pi / 8, q[15], q[12])
    qc.cp(np.pi / 4, q[14], q[12])
    qc.cp(np.pi / 2, q[13], q[12])
    qc.h(q[12])
    qc.cp(np.pi / 32, q[16], q[11])
    qc.cp(np.pi / 16, q[15], q[11])
    qc.cp(np.pi / 8, q[14], q[11])
    qc.cp(np.pi / 4, q[13], q[11])
    qc.cp(np.pi / 2, q[12], q[11])
    qc.h(q[11])
    qc.cp(np.pi / 32, q[15], q[10])
    qc.cp(np.pi / 16, q[14], q[10])
    qc.cp(np.pi / 8, q[13], q[10])
    qc.cp(np.pi / 4, q[12], q[10])
    qc.cp(np.pi / 2, q[11], q[10])
    qc.h(q[10])
    qc.cp(np.pi / 32, q[14], q[9])
    qc.cp(np.pi / 16, q[13], q[9])
    qc.cp(np.pi / 8, q[12], q[9])
    qc.cp(np.pi / 4, q[11], q[9])
    qc.cp(np.pi / 2, q[10], q[9])
    qc.cp(np.pi / 32, q[13], q[8])
    qc.cp(np.pi / 16, q[12], q[8])
    qc.cp(np.pi / 8, q[11], q[8])
    qc.cp(np.pi / 4, q[10], q[8])
    qc.cp(np.pi / 32, q[12], q[7])
    qc.cp(np.pi / 16, q[11], q[7])
    qc.cp(np.pi / 8, q[10], q[7])
    qc.cp(np.pi / 32, q[11], q[6])
    qc.cp(np.pi / 16, q[10], q[6])
    qc.cp(np.pi / 32, q[10], q[5])
    qc.h(q[9])
    qc.cp(np.pi / 2, q[9], q[8])
    qc.h(q[8])
    qc.cp(np.pi / 4, q[9], q[7])
    qc.cp(np.pi / 2, q[8], q[7])
    qc.h(q[7])
    qc.cp(np.pi / 8, q[9], q[6])
    qc.cp(np.pi / 4, q[8], q[6])
    qc.cp(np.pi / 2, q[7], q[6])
    qc.h(q[6])
    qc.cp(np.pi / 16, q[9], q[5])
    qc.cp(np.pi / 8, q[8], q[5])
    qc.cp(np.pi / 4, q[7], q[5])
    qc.cp(np.pi / 2, q[6], q[5])
    qc.h(q[5])
    qc.cp(np.pi / 32, q[9], q[4])
    qc.cp(np.pi / 16, q[8], q[4])
    qc.cp(np.pi / 8, q[7], q[4])
    qc.cp(np.pi / 4, q[6], q[4])
    qc.cp(np.pi / 2, q[5], q[4])
    qc.h(q[4])
    qc.cp(np.pi / 32, q[8], q[3])
    qc.cp(np.pi / 16, q[7], q[3])
    qc.cp(np.pi / 8, q[6], q[3])
    qc.cp(np.pi / 4, q[5], q[3])
    qc.cp(np.pi / 2, q[4], q[3])
    qc.h(q[3])
    qc.cp(np.pi / 32, q[7], q[2])
    qc.cp(np.pi / 16, q[6], q[2])
    qc.cp(np.pi / 8, q[5], q[2])
    qc.cp(np.pi / 4, q[4], q[2])
    qc.cp(np.pi / 2, q[3], q[2])
    qc.h(q[2])
    qc.cp(np.pi / 32, q[6], q[1])
    qc.cp(np.pi / 16, q[5], q[1])
    qc.cp(np.pi / 8, q[4], q[1])
    qc.cp(np.pi / 4, q[3], q[1])
    qc.cp(np.pi / 2, q[2], q[1])
    qc.h(q[1])
    qc.cp(np.pi / 32, q[5], q[0])
    qc.cp(np.pi / 16, q[4], q[0])
    qc.cp(np.pi / 8, q[3], q[0])
    qc.cp(np.pi / 4, q[2], q[0])
    qc.cp(np.pi / 2, q[1], q[0])
    qc.h(q[0])
    return qc

def aqft20_0():
    qc = QuantumCircuit()

    q = QuantumRegister(15, 'q')

    qc.add_register(q)
    qc.h(q[14])
    qc.cp(np.pi / 2, q[14], q[13])
    qc.h(q[13])
    qc.cp(np.pi / 4, q[14], q[12])
    qc.cp(np.pi / 2, q[13], q[12])
    qc.h(q[12])
    qc.cp(np.pi / 8, q[14], q[11])
    qc.cp(np.pi / 4, q[13], q[11])
    qc.cp(np.pi / 2, q[12], q[11])
    qc.h(q[11])
    qc.cp(np.pi / 16, q[14], q[10])
    qc.cp(np.pi / 8, q[13], q[10])
    qc.cp(np.pi / 4, q[12], q[10])
    qc.cp(np.pi / 2, q[11], q[10])
    qc.h(q[10])
    qc.cp(np.pi / 32, q[14], q[9])
    qc.cp(np.pi / 16, q[13], q[9])
    qc.cp(np.pi / 8, q[12], q[9])
    qc.cp(np.pi / 4, q[11], q[9])
    qc.cp(np.pi / 2, q[10], q[9])
    qc.h(q[9])
    qc.cp(np.pi / 32, q[13], q[8])
    qc.cp(np.pi / 16, q[12], q[8])
    qc.cp(np.pi / 8, q[11], q[8])
    qc.cp(np.pi / 4, q[10], q[8])
    qc.cp(np.pi / 2, q[9], q[8])
    qc.h(q[8])
    qc.cp(np.pi / 32, q[12], q[7])
    qc.cp(np.pi / 16, q[11], q[7])
    qc.cp(np.pi / 8, q[10], q[7])
    qc.cp(np.pi / 4, q[9], q[7])
    qc.cp(np.pi / 2, q[8], q[7])
    qc.h(q[7])
    qc.cp(np.pi / 32, q[11], q[6])
    qc.cp(np.pi / 16, q[10], q[6])
    qc.cp(np.pi / 8, q[9], q[6])
    qc.cp(np.pi / 4, q[8], q[6])
    qc.cp(np.pi / 2, q[7], q[6])
    qc.h(q[6])
    qc.cp(np.pi / 32, q[10], q[5])
    qc.cp(np.pi / 16, q[9], q[5])
    qc.cp(np.pi / 8, q[8], q[5])
    qc.cp(np.pi / 4, q[7], q[5])
    qc.cp(np.pi / 2, q[6], q[5])
    qc.h(q[5])
    qc.cp(np.pi / 32, q[9], q[4])
    qc.cp(np.pi / 16, q[8], q[4])
    qc.cp(np.pi / 8, q[7], q[4])
    qc.cp(np.pi / 4, q[6], q[4])
    qc.cp(np.pi / 2, q[5], q[4])
    qc.cp(np.pi / 32, q[8], q[3])
    qc.cp(np.pi / 16, q[7], q[3])
    qc.cp(np.pi / 8, q[6], q[3])
    qc.cp(np.pi / 4, q[5], q[3])
    qc.cp(np.pi / 32, q[7], q[2])
    qc.cp(np.pi / 16, q[6], q[2])
    qc.cp(np.pi / 8, q[5], q[2])
    qc.cp(np.pi / 32, q[6], q[1])
    qc.cp(np.pi / 16, q[5], q[1])
    qc.cp(np.pi / 32, q[5], q[0])
    qc.h(q[4])
    qc.cp(np.pi / 2, q[4], q[3])
    qc.h(q[3])
    qc.cp(np.pi / 4, q[4], q[2])
    qc.cp(np.pi / 2, q[3], q[2])
    qc.h(q[2])
    qc.cp(np.pi / 8, q[4], q[1])
    qc.cp(np.pi / 4, q[3], q[1])
    qc.cp(np.pi / 2, q[2], q[1])
    qc.h(q[1])
    qc.cp(np.pi / 16, q[4], q[0])
    qc.cp(np.pi / 8, q[3], q[0])
    qc.cp(np.pi / 4, q[2], q[0])
    qc.cp(np.pi / 2, q[1], q[0])
    qc.h(q[0])
    return qc

def aqft20_1():
    qc = QuantumCircuit()

    q = QuantumRegister(10, 'q')

    qc.add_register(q)

    qc.cp(np.pi / 32, q[9], q[4])
    qc.cp(np.pi / 16, q[8], q[4])
    qc.cp(np.pi / 8, q[7], q[4])
    qc.cp(np.pi / 4, q[6], q[4])
    qc.cp(np.pi / 2, q[5], q[4])
    qc.h(q[4])
    qc.cp(np.pi / 32, q[8], q[3])
    qc.cp(np.pi / 16, q[7], q[3])
    qc.cp(np.pi / 8, q[6], q[3])
    qc.cp(np.pi / 4, q[5], q[3])
    qc.cp(np.pi / 2, q[4], q[3])
    qc.h(q[3])
    qc.cp(np.pi / 32, q[7], q[2])
    qc.cp(np.pi / 16, q[6], q[2])
    qc.cp(np.pi / 8, q[5], q[2])
    qc.cp(np.pi / 4, q[4], q[2])
    qc.cp(np.pi / 2, q[3], q[2])
    qc.h(q[2])
    qc.cp(np.pi / 32, q[6], q[1])
    qc.cp(np.pi / 16, q[5], q[1])
    qc.cp(np.pi / 8, q[4], q[1])
    qc.cp(np.pi / 4, q[3], q[1])
    qc.cp(np.pi / 2, q[2], q[1])
    qc.h(q[1])
    qc.cp(np.pi / 32, q[5], q[0])
    qc.cp(np.pi / 16, q[4], q[0])
    qc.cp(np.pi / 8, q[3], q[0])
    qc.cp(np.pi / 4, q[2], q[0])
    qc.cp(np.pi / 2, q[1], q[0])
    qc.h(q[0])
    return qc
