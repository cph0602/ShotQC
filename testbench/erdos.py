from qiskit import QuantumCircuit, QuantumRegister
import numpy as np

def erdos20():
    qc = QuantumCircuit()

    q = QuantumRegister(20, 'q')

    qc.add_register(q)

    qc.h(q[0])
    qc.h(q[1])
    qc.h(q[2])
    qc.h(q[3])
    qc.h(q[4])
    qc.h(q[5])
    qc.h(q[6])
    qc.h(q[7])
    qc.h(q[8])
    qc.h(q[9])
    qc.h(q[10])
    qc.h(q[11])
    qc.h(q[12])
    qc.h(q[13])
    qc.h(q[14])
    qc.h(q[15])
    qc.h(q[16])
    qc.h(q[17])
    qc.h(q[18])
    qc.h(q[19])
    qc.rz(-1.3290176166042813, q[0])
    qc.rz(-1.3290176166042813, q[8])
    qc.rz(-1.3290176166042813, q[15])
    qc.rz(-1.3290176166042813, q[17])
    qc.rz(-1.3290176166042813, q[18])
    qc.rz(-1.3290176166042813, q[19])
    qc.cx(q[0], q[8])
    qc.rz(1.3290176166042813, q[8])
    qc.cx(q[0], q[8])
    qc.rz(-1.3290176166042813, q[0])
    qc.cx(q[0], q[15])
    qc.rz(1.3290176166042813, q[15])
    qc.cx(q[0], q[15])
    qc.rx(1.044527369592747, q[0])
    qc.rz(-1.3290176166042813, q[1])
    qc.rz(-1.3290176166042813, q[9])
    qc.rz(-1.3290176166042813, q[10])
    qc.cx(q[1], q[9])
    qc.rz(1.3290176166042813, q[9])
    qc.cx(q[1], q[9])
    qc.rz(-1.3290176166042813, q[1])
    qc.cx(q[1], q[10])
    qc.rz(1.3290176166042813, q[10])
    qc.cx(q[1], q[10])
    qc.rx(1.044527369592747, q[1])
    qc.rz(-1.3290176166042813, q[2])
    qc.rz(-1.3290176166042813, q[5])
    qc.cx(q[2], q[5])
    qc.rz(1.3290176166042813, q[5])
    qc.cx(q[2], q[5])
    qc.rz(-1.3290176166042813, q[2])
    qc.cx(q[2], q[17])
    qc.rz(1.3290176166042813, q[17])
    qc.cx(q[2], q[17])
    qc.rx(1.044527369592747, q[2])
    qc.rz(-1.3290176166042813, q[3])
    qc.rz(-1.3290176166042813, q[6])
    qc.rz(-1.3290176166042813, q[14])
    qc.rz(-1.3290176166042813, q[17])
    qc.cx(q[3], q[6])
    qc.rz(1.3290176166042813, q[6])
    qc.cx(q[3], q[6])
    qc.rx(1.044527369592747, q[3])
    qc.rz(-1.3290176166042813, q[4])
    qc.cx(q[4], q[14])
    qc.rz(1.3290176166042813, q[14])
    qc.cx(q[4], q[14])
    qc.rz(-1.3290176166042813, q[4])
    qc.cx(q[4], q[17])
    qc.rz(1.3290176166042813, q[17])
    qc.cx(q[4], q[17])
    qc.rx(1.044527369592747, q[4])
    qc.rx(1.044527369592747, q[5])
    qc.rz(-1.3290176166042813, q[6])
    qc.rz(-1.3290176166042813, q[17])
    qc.cx(q[6], q[17])
    qc.rz(1.3290176166042813, q[17])
    qc.cx(q[6], q[17])
    qc.rz(-1.3290176166042813, q[6])
    qc.cx(q[6], q[18])
    qc.rz(1.3290176166042813, q[18])
    qc.cx(q[6], q[18])
    qc.rx(1.044527369592747, q[6])
    qc.rz(-1.3290176166042813, q[7])
    qc.rz(-1.3290176166042813, q[8])
    qc.rz(-1.3290176166042813, q[16])
    qc.cx(q[7], q[8])
    qc.rz(1.3290176166042813, q[8])
    qc.cx(q[7], q[8])
    qc.rz(-1.3290176166042813, q[7])
    qc.cx(q[7], q[16])
    qc.rz(1.3290176166042813, q[16])
    qc.cx(q[7], q[16])
    qc.rx(1.044527369592747, q[7])
    qc.rz(-1.3290176166042813, q[8])
    qc.rz(-1.3290176166042813, q[9])
    qc.rz(-1.3290176166042813, q[13])
    qc.rz(-1.3290176166042813, q[16])
    qc.cx(q[8], q[9])
    qc.rz(1.3290176166042813, q[9])
    qc.cx(q[8], q[9])
    qc.rz(-1.3290176166042813, q[8])
    qc.cx(q[8], q[13])
    qc.rz(1.3290176166042813, q[13])
    qc.cx(q[8], q[13])
    qc.rz(-1.3290176166042813, q[8])
    qc.cx(q[8], q[16])
    qc.rz(1.3290176166042813, q[16])
    qc.cx(q[8], q[16])
    qc.rz(-1.3290176166042813, q[8])
    qc.cx(q[8], q[19])
    qc.rz(1.3290176166042813, q[19])
    qc.cx(q[8], q[19])
    qc.rx(1.044527369592747, q[8])
    qc.rz(-1.3290176166042813, q[9])
    qc.rz(-1.3290176166042813, q[10])
    qc.rz(-1.3290176166042813, q[17])
    qc.rz(-1.3290176166042813, q[19])
    qc.cx(q[9], q[10])
    qc.rz(1.3290176166042813, q[10])
    qc.cx(q[9], q[10])
    qc.rz(-1.3290176166042813, q[9])
    qc.cx(q[9], q[17])
    qc.rz(1.3290176166042813, q[17])
    qc.cx(q[9], q[17])
    qc.rx(1.044527369592747, q[9])
    qc.rx(1.044527369592747, q[10])
    qc.rz(-1.3290176166042813, q[11])
    qc.cx(q[11], q[19])
    qc.rz(1.3290176166042813, q[19])
    qc.cx(q[11], q[19])
    qc.rx(1.044527369592747, q[11])
    qc.rz(-1.3290176166042813, q[12])
    qc.rz(-1.3290176166042813, q[19])
    qc.cx(q[12], q[19])
    qc.rz(1.3290176166042813, q[19])
    qc.cx(q[12], q[19])
    qc.rx(1.044527369592747, q[12])
    qc.rz(-1.3290176166042813, q[13])
    qc.rz(-1.3290176166042813, q[19])
    qc.cx(q[13], q[19])
    qc.rz(1.3290176166042813, q[19])
    qc.cx(q[13], q[19])
    qc.rx(1.044527369592747, q[13])
    qc.rx(1.044527369592747, q[14])
    qc.rz(-1.3290176166042813, q[15])
    qc.rz(-1.3290176166042813, q[18])
    qc.rz(-1.3290176166042813, q[19])
    qc.cx(q[15], q[18])
    qc.rz(1.3290176166042813, q[18])
    qc.cx(q[15], q[18])
    qc.rx(1.044527369592747, q[15])
    qc.rz(-1.3290176166042813, q[16])
    qc.rz(-1.3290176166042813, q[18])
    qc.cx(q[16], q[18])
    qc.rz(1.3290176166042813, q[18])
    qc.cx(q[16], q[18])
    qc.rx(1.044527369592747, q[16])
    qc.rz(-1.3290176166042813, q[17])
    qc.cx(q[17], q[19])
    qc.rz(1.3290176166042813, q[19])
    qc.cx(q[17], q[19])
    qc.rx(1.044527369592747, q[17])
    qc.rx(1.044527369592747, q[18])
    qc.rx(1.044527369592747, q[19])
    return qc

def erdos20_0():
    qc = QuantumCircuit()

    q = QuantumRegister(8, 'q')

    qc.add_register(q)

    qc.h(q[0])
    qc.h(q[1])
    qc.h(q[2])
    qc.h(q[3])
    qc.h(q[4])
    qc.h(q[5])
    qc.h(q[6])
    qc.h(q[7])
    qc.rz(-1.3290176166042813, q[0])
    qc.rz(-1.3290176166042813, q[1])
    qc.rz(-1.3290176166042813, q[2])
    qc.rz(-1.3290176166042813, q[3])
    qc.rz(-1.3290176166042813, q[4])
    qc.rz(-1.3290176166042813, q[5])
    qc.rz(-1.3290176166042813, q[6])
    qc.rz(-1.3290176166042813, q[7])
    qc.cx(q[0], q[3])
    qc.rz(1.3290176166042813, q[3])
    qc.cx(q[0], q[3])
    qc.rz(-1.3290176166042813, q[0])
    qc.rx(1.044527369592747, q[3])
    qc.cx(q[1], q[4])
    qc.rz(1.3290176166042813, q[4])
    qc.cx(q[1], q[4])
    qc.rx(1.044527369592747, q[1])
    qc.rz(-1.3290176166042813, q[4])
    qc.cx(q[2], q[5])
    qc.rz(1.3290176166042813, q[5])
    qc.cx(q[2], q[5])
    qc.rz(-1.3290176166042813, q[2])
    qc.rx(1.044527369592747, q[5])
    qc.cx(q[0], q[6])
    qc.rz(1.3290176166042813, q[6])
    qc.cx(q[0], q[6])
    qc.rx(1.044527369592747, q[0])
    qc.rz(-1.3290176166042813, q[6])
    qc.cx(q[2], q[6])
    qc.rz(1.3290176166042813, q[6])
    qc.cx(q[2], q[6])
    qc.rx(1.044527369592747, q[2])
    qc.rz(-1.3290176166042813, q[6])
    qc.cx(q[4], q[6])
    qc.rz(1.3290176166042813, q[6])
    qc.cx(q[4], q[6])
    qc.rz(-1.3290176166042813, q[4])
    qc.rz(-1.3290176166042813, q[6])
    qc.cx(q[4], q[7])
    qc.rz(1.3290176166042813, q[7])
    qc.cx(q[4], q[7])
    qc.rx(1.044527369592747, q[4])
    qc.rz(-1.3290176166042813, q[7])
    return qc

def erdos20_1():
    qc = QuantumCircuit()

    q = QuantumRegister(14, 'q')

    qc.add_register(q)

    qc.h(q[0])
    qc.h(q[1])
    qc.h(q[2])
    qc.h(q[3])
    qc.h(q[4])
    qc.h(q[5])
    qc.h(q[6])
    qc.h(q[7])
    qc.h(q[8])
    qc.h(q[9])
    qc.h(q[10])
    qc.h(q[13])
    qc.rz(-1.3290176166042813, q[0])
    qc.rz(-1.3290176166042813, q[1])
    qc.rz(-1.3290176166042813, q[2])
    qc.rz(-1.3290176166042813, q[3])
    qc.rz(-1.3290176166042813, q[4])
    qc.rz(-1.3290176166042813, q[5])
    qc.rz(-1.3290176166042813, q[6])
    qc.rz(-1.3290176166042813, q[7])
    qc.rz(-1.3290176166042813, q[8])
    qc.rz(-1.3290176166042813, q[9])
    qc.rz(-1.3290176166042813, q[10])
    qc.rz(-1.3290176166042813, q[13])
    qc.cx(q[0], q[3])
    qc.rz(1.3290176166042813, q[3])
    qc.cx(q[0], q[3])
    qc.rz(-1.3290176166042813, q[0])
    qc.rz(-1.3290176166042813, q[3])
    qc.cx(q[2], q[3])
    qc.rz(1.3290176166042813, q[3])
    qc.cx(q[2], q[3])
    qc.rz(-1.3290176166042813, q[2])
    qc.rz(-1.3290176166042813, q[3])
    qc.cx(q[1], q[4])
    qc.rz(1.3290176166042813, q[4])
    qc.cx(q[1], q[4])
    qc.rz(-1.3290176166042813, q[1])
    qc.rz(-1.3290176166042813, q[4])
    qc.cx(q[3], q[4])
    qc.rz(1.3290176166042813, q[4])
    qc.cx(q[3], q[4])
    qc.rz(-1.3290176166042813, q[3])
    qc.rz(-1.3290176166042813, q[4])
    qc.cx(q[1], q[5])
    qc.rz(1.3290176166042813, q[5])
    qc.cx(q[1], q[5])
    qc.rx(1.044527369592747, q[1])
    qc.rz(-1.3290176166042813, q[5])
    qc.cx(q[4], q[5])
    qc.rz(1.3290176166042813, q[5])
    qc.cx(q[4], q[5])
    qc.rz(-1.3290176166042813, q[4])
    qc.rx(1.044527369592747, q[5])
    qc.cx(q[3], q[8])
    qc.rz(1.3290176166042813, q[8])
    qc.cx(q[3], q[8])
    qc.rz(-1.3290176166042813, q[3])
    qc.rz(-1.3290176166042813, q[8])
    qc.cx(q[0], q[9])
    qc.rz(1.3290176166042813, q[9])
    qc.cx(q[0], q[9])
    qc.rx(1.044527369592747, q[0])
    qc.rz(-1.3290176166042813, q[9])
    qc.cx(q[2], q[10])
    qc.rz(1.3290176166042813, q[10])
    qc.cx(q[2], q[10])
    qc.rx(1.044527369592747, q[2])
    qc.rz(-1.3290176166042813, q[10])
    qc.cx(q[3], q[10])
    qc.rz(1.3290176166042813, q[10])
    qc.cx(q[3], q[10])
    qc.rz(-1.3290176166042813, q[3])
    qc.rz(-1.3290176166042813, q[10])
    qc.cx(q[4], q[11])
    qc.rz(1.3290176166042813, q[11])
    qc.cx(q[4], q[11])
    qc.rx(1.044527369592747, q[4])
    qc.rz(-1.3290176166042813, q[11])
    qc.cx(q[9], q[12])
    qc.rz(1.3290176166042813, q[12])
    qc.cx(q[9], q[12])
    qc.rx(1.044527369592747, q[9])
    qc.rz(-1.3290176166042813, q[12])
    qc.cx(q[10], q[12])
    qc.rz(1.3290176166042813, q[12])
    qc.cx(q[10], q[12])
    qc.rx(1.044527369592747, q[10])
    qc.rx(1.044527369592747, q[12])
    qc.cx(q[3], q[13])
    qc.rz(1.3290176166042813, q[13])
    qc.cx(q[3], q[13])
    qc.rx(1.044527369592747, q[3])
    qc.rz(-1.3290176166042813, q[13])
    qc.cx(q[6], q[13])
    qc.rz(1.3290176166042813, q[13])
    qc.cx(q[6], q[13])
    qc.rx(1.044527369592747, q[6])
    qc.rz(-1.3290176166042813, q[13])
    qc.cx(q[7], q[13])
    qc.rz(1.3290176166042813, q[13])
    qc.cx(q[7], q[13])
    qc.rx(1.044527369592747, q[7])
    qc.rz(-1.3290176166042813, q[13])
    qc.cx(q[8], q[13])
    qc.rz(1.3290176166042813, q[13])
    qc.cx(q[8], q[13])
    qc.rx(1.044527369592747, q[8])
    qc.rz(-1.3290176166042813, q[13])
    qc.cx(q[11], q[13])
    qc.rz(1.3290176166042813, q[13])
    qc.cx(q[11], q[13])
    qc.rx(1.044527369592747, q[11])
    qc.rx(1.044527369592747, q[13])
    return qc
