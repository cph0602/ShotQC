nohup: ignoring input
--> Generating subcircuit entries:
Subcircuit 0 has 12 entries.
Subcircuit 1 has 12 entries.
--> Running Prior Samples
--> Optimizing Parameters
-----> Reading data
Step 10/100: Cost = 1.6283950805664062
Step 20/100: Cost = 1.5537364482879639
Step 30/100: Cost = 1.4731810092926025
Step 40/100: Cost = 1.3980988264083862
Step 50/100: Cost = 1.3319551944732666
Step 60/100: Cost = 1.2748891115188599
Step 70/100: Cost = 1.2254016399383545
Step 80/100: Cost = 1.1816253662109375
Step 90/100: Cost = 1.1420390605926514
Step 100/100: Cost = 1.1142985820770264
Optimized cost:  1.1142985820770264
Theoretical minimum variance:  3.880191656308973e-05
--> Iteration 1: Running Posterior Samples
-----> Reading data
-----> Distributing Shots
-----> Batch 1/1 Completed, used 1.1837347359978594 seconds
-----> Running Samples
--> Building output probability
-----> Reading data
-----> Batch 1/1 Completed, used 0.6685178879997693 seconds
-----> Reading data
[[418.0, 1753.0, 906.0, 849.0, 2979.0, 2013.0, 100.0, 2583.0, 806.0, 100.0, 1989.0, 1319.0], [218.0, 276.0, 100.0, 1835.0, 2449.0, 1744.0, 2852.0, 2486.0, 1602.0, 1450.0, 512.0, 651.0]]
32000
0.434200644493103
Theoretical Min. Variance:  5.8915687399445635e-06
-----> Batch 1/1 Completed, used 1.5869201619934756 seconds
Variance:  1.1330306733725592e-05
tensor(7.1296e-07, device='cuda:0', dtype=torch.float64)
